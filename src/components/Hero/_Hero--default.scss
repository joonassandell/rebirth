/* =======================================
 * Hero
 * ======================================= */

.Hero--default {
  position: relative;

  .Hero-item {
    background-color: $primary;
    color: #ffffff;
    position: relative;
    overflow: hidden;
    width: 100%;
  }

  .Hero-wrap {
    display: flex;
    position: relative;
    z-index: 2;
  }

  .Hero-content {
    align-items: flex-start;
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: rem($space * 10);
    width: 80%;

    @include mq(s) {
      width: 75%;
    }

    @include mq(m) {
      width: 50%;
    }
  }

  .Hero-content-item {
    max-width: 100%;
    padding-bottom: rem($space * 2);
    padding-top: rem($space * 2);

    > *:last-child {
      margin: 0;
    }
  }

  .Hero-figure {
    @include positionAbsoluteFill();
    background-position: center;
    background-size: cover;
    background-position: center;
    margin-bottom: 0;
    z-index: 0;

    img {
      display: block;
      height: 100%;
      object-fit: cover;
      width: 100%;
    }
  }

  .Hero-figure--video {
    z-index: -1;

    .no-js & {
      z-index: 1;
    }

    video {
      display: block;
      height: 100%;
      object-fit: cover;
      width: 100%;
    }

    video::-webkit-media-controls {
      display: none !important;
    }

    .no-object-fit & > video {
      bottom: 0;
      height: auto;
      position: absolute;
    }

    .no-js & > video {
      display: none;
    }
  }


  /* ======
   * Hero - Size
   * ====== */

  &.-full {
    .Hero-content {
      min-height: 100vh;
    }
  }

  &.-l {
    .Hero-content {
      min-height: rem($space * 18);
    }

    @include mq(s) {
      .Hero-content {
        min-height: rem($space * 28);
      }
    }
  }

  &.-m {
    .Hero-content {
      min-height: rem($space * 14);
    }

    @include mq(m) {
      .Hero-content {
        min-height: rem($space * 16);
      }
    }
  }


  /* ======
   * Hero item - Color
   * ====== */

  .Hero-item {
    &.-colorInverse {
      background-color: #ffffff;
      color: $text;

      &.-overlay {
        .Hero-overlay {
          background-color: rgba(#ffffff, 0.75);
        }
      }
    }
  }


  /* ======
   * Hero item - Align
   * ====== */

  .Hero-item {
    &.-alignContentCenter {
      .Hero-wrap {
        justify-content: center;
      }

      .Hero-content {
        align-items: center;
        text-align: center;
      }
    }

    &.-alignContentRight {
      .Hero-wrap {
        justify-content: flex-end;
      }

      .Hero-content {
        align-items: flex-end;
        text-align: right;
      }
    }
  }


  /* ======
  * Hero item - Various modifiers
  * ====== */

  .Hero-item {
    &.-overlay {
      &:after {
        @include positionAbsoluteFill();
        background-color: rgba(#000000, 0.5);
        content: '';
        z-index: 1;
      }
    }
  }
}
